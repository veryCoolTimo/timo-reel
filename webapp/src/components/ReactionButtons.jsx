import React, { useState } from 'react'
import '../styles/ReactionButtons.css'

const ReactionButtons = ({ fileId, onReaction, userId }) => {
  const [likePressed, setLikePressed] = useState(false)
  const [commentPressed, setCommentPressed] = useState(false)

  const handleLike = async () => {
    if (!userId) return
    
    setLikePressed(true)
    
    try {
      await onReaction(fileId, 'like')
      
      // –ê–Ω–∏–º–∞—Ü–∏—è —Å–µ—Ä–¥–µ—á–∫–∞
      setTimeout(() => setLikePressed(false), 300)
    } catch (error) {
      console.error('Error sending like:', error)
      setLikePressed(false)
    }
  }

  const handleComment = async () => {
    if (!userId) return
    
    setCommentPressed(true)
    
    try {
      await onReaction(fileId, 'comment')
      
      // –ê–Ω–∏–º–∞—Ü–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
      setTimeout(() => setCommentPressed(false), 300)
    } catch (error) {
      console.error('Error sending comment:', error)
      setCommentPressed(false)
    }
  }

  return (
    <div className="reaction-buttons">
      <div className="reaction-column">
        {/* –ö–Ω–æ–ø–∫–∞ –ª–∞–π–∫–∞ */}
        <button 
          className={`reaction-button like-button ${likePressed ? 'pressed' : ''}`}
          onClick={handleLike}
          disabled={!userId}
          aria-label="–ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫"
        >
          <div className="button-icon">
            <div className="heart-icon">
              {likePressed ? '‚ù§Ô∏è' : 'ü§ç'}
            </div>
          </div>
          <span className="button-label">–õ–∞–π–∫</span>
        </button>

        {/* –ö–Ω–æ–ø–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è */}
        <button 
          className={`reaction-button comment-button ${commentPressed ? 'pressed' : ''}`}
          onClick={handleComment}
          disabled={!userId}
          aria-label="–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
        >
          <div className="button-icon">
            <div className="comment-icon">
              üí¨
            </div>
          </div>
          <span className="button-label">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π</span>
        </button>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */}
        <button 
          className="reaction-button share-button"
          onClick={() => {
            if (window.Telegram?.WebApp) {
              window.Telegram.WebApp.showAlert('–§—É–Ω–∫—Ü–∏—è –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!')
            }
          }}
          aria-label="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
        >
          <div className="button-icon">
            <div className="share-icon">
              üì§
            </div>
          </div>
          <span className="button-label">–ü–æ–¥–µ–ª–∏—Ç—å—Å—è</span>
        </button>
      </div>

      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã */}
      {likePressed && (
        <div className="reaction-effect like-effect">
          <div className="floating-heart">‚ù§Ô∏è</div>
          <div className="floating-heart">‚ù§Ô∏è</div>
          <div className="floating-heart">‚ù§Ô∏è</div>
        </div>
      )}

      {commentPressed && (
        <div className="reaction-effect comment-effect">
          <div className="floating-comment">üí¨</div>
        </div>
      )}
    </div>
  )
}

export default ReactionButtons 