#!/usr/bin/env python3
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∞–∫—Ü–∏–π - –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–≤—Ç–æ—Ä–∞–º –≤–∏–¥–µ–æ
"""

import logging
from telegram import Bot
from telegram.error import TelegramError
from utils.cache import get_video_author, is_user_muted, add_reaction
from utils.config import BOT_TOKEN

logger = logging.getLogger(__name__)

async def send_reaction_notification(user_id: int, file_id: str, reaction_type: str, reactor_username: str):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä—É –≤–∏–¥–µ–æ –æ –Ω–æ–≤–æ–π —Ä–µ–∞–∫—Ü–∏–∏
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–∞–≤–∏–ª —Ä–µ–∞–∫—Ü–∏—é
        file_id: ID –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞
        reaction_type: —Ç–∏–ø —Ä–µ–∞–∫—Ü–∏–∏ ('like' –∏–ª–∏ 'comment')
        reactor_username: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–∞–≤–∏–ª —Ä–µ–∞–∫—Ü–∏—é
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ –≤–∏–¥–µ–æ
        video_author = get_video_author(file_id)
        if not video_author:
            logger.warning(f"Video author not found for file_id: {file_id}")
            return False
        
        author_id = video_author['user_id']
        author_username = video_author['username']
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å—Ç–∞–≤–∏—Ç –ª–∏ –∞–≤—Ç–æ—Ä —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ —Å–≤–æ–µ –∂–µ –≤–∏–¥–µ–æ
        if user_id == author_id:
            logger.debug(f"User {user_id} reacted to their own video, skipping notification")
            return True
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –æ—Ç–∫–ª—é—á–µ–Ω—ã –ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É –∞–≤—Ç–æ—Ä–∞
        if is_user_muted(author_id):
            logger.debug(f"User {author_id} has notifications muted, skipping")
            return True
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∞–∫—Ü–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        add_reaction(user_id, file_id, reaction_type)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if reaction_type == 'like':
            emoji = "‚ù§Ô∏è"
            action = "–ø–æ—Å—Ç–∞–≤–∏–ª –ª–∞–π–∫"
        elif reaction_type == 'comment':
            emoji = "üí¨"
            action = "–ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª"
        else:
            emoji = "üëç"
            action = f"–æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª ({reaction_type})"
        
        notification_text = (
            f"{emoji} –ù–æ–≤–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –≤–∞—à–µ –≤–∏–¥–µ–æ!\n\n"
            f"üë§ @{reactor_username} {action} –≤–∞—à–µ –≤–∏–¥–µ–æ\n"
            f"üé¨ –ê–≤—Ç–æ—Ä: @{author_username}\n\n"
            f"üí° –ß—Ç–æ–±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /mute"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä—É –≤–∏–¥–µ–æ
        bot = Bot(token=BOT_TOKEN)
        await bot.send_message(
            chat_id=author_id,
            text=notification_text,
            parse_mode='HTML'
        )
        
        logger.info(f"Sent {reaction_type} notification to user {author_id} from {user_id}")
        return True
        
    except TelegramError as e:
        if "chat not found" in str(e).lower() or "user not found" in str(e).lower():
            logger.warning(f"Cannot send notification to user {author_id}: user not accessible")
        else:
            logger.error(f"Telegram error sending notification to {author_id}: {e}")
        return False
        
    except Exception as e:
        logger.error(f"Error sending reaction notification: {e}")
        return False

async def process_reaction(user_id: int, file_id: str, reaction_type: str, username: str = None):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∞–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        file_id: ID –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞
        reaction_type: —Ç–∏–ø —Ä–µ–∞–∫—Ü–∏–∏
        username: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    """
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º username –∏–ª–∏ fallback
        reactor_username = username or f"user_{user_id}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        success = await send_reaction_notification(
            user_id=user_id,
            file_id=file_id,
            reaction_type=reaction_type,
            reactor_username=reactor_username
        )
        
        if success:
            logger.info(f"Successfully processed {reaction_type} from {user_id} for video {file_id}")
        else:
            logger.warning(f"Failed to process {reaction_type} from {user_id} for video {file_id}")
        
        return success
        
    except Exception as e:
        logger.error(f"Error processing reaction: {e}")
        return False 