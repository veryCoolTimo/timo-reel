import logging
from telegram import Update
from telegram.ext import ContextTypes
from utils.cache import (
    set_user_mute_status, 
    is_user_muted, 
    get_user_reactions,
    load_metadata
)

logger = logging.getLogger(__name__)

async def mute_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /mute - –æ—Ç–∫–ª—é—á–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–∞–∫—Ü–∏—è—Ö"""
    if update.message.chat.type != 'private':
        await update.message.reply_text(
            "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º."
        )
        return
    
    user_id = update.effective_user.id
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å mute
    set_user_mute_status(user_id, True)
    
    await update.message.reply_text(
        "üîá –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–∞–∫—Ü–∏—è—Ö –æ—Ç–∫–ª—é—á–µ–Ω—ã.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /unmute —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –∏—Ö –æ–±—Ä–∞—Ç–Ω–æ."
    )
    
    logger.info(f"User {user_id} muted notifications")

async def unmute_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /unmute - –≤–∫–ª—é—á–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–∞–∫—Ü–∏—è—Ö"""
    if update.message.chat.type != 'private':
        await update.message.reply_text(
            "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º."
        )
        return
    
    user_id = update.effective_user.id
    
    # –°–Ω–∏–º–∞–µ–º —Å—Ç–∞—Ç—É—Å mute
    set_user_mute_status(user_id, False)
    
    await update.message.reply_text(
        "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–∞–∫—Ü–∏—è—Ö –≤–∫–ª—é—á–µ–Ω—ã.\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ª–∞–π–∫–∞—Ö –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –∫ –≤–∞—à–∏–º –≤–∏–¥–µ–æ."
    )
    
    logger.info(f"User {user_id} unmuted notifications")

async def likes_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /likes - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if update.message.chat.type != 'private':
        await update.message.reply_text(
            "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º."
        )
        return
    
    user_id = update.effective_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    reactions = get_user_reactions(user_id)
    
    if not reactions:
        await update.message.reply_text(
            "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∞–∫—Ü–∏–π.\n"
            "–°—Ç–∞–≤—å—Ç–µ –ª–∞–π–∫–∏ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –≤–∏–¥–µ–æ –≤ WebApp!"
        )
        return
    
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 20 —Ä–µ–∞–∫—Ü–∏–π
    recent_reactions = reactions[-20:]
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
    metadata = load_metadata()
    videos = metadata.get("videos", {})
    
    response_lines = ["üìä –í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏:\n"]
    
    for reaction in reversed(recent_reactions):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞
        file_id = reaction["file_id"]
        reaction_type = reaction["type"]
        timestamp = reaction["timestamp"]
        
        # –ò—â–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
        video_info = videos.get(file_id)
        if video_info:
            username = video_info.get("username", "Unknown")
            emoji = "‚ù§Ô∏è" if reaction_type == "like" else "üí¨"
            response_lines.append(f"{emoji} –í–∏–¥–µ–æ –æ—Ç @{username}")
        else:
            emoji = "‚ù§Ô∏è" if reaction_type == "like" else "üí¨"
            response_lines.append(f"{emoji} –í–∏–¥–µ–æ (—É–¥–∞–ª–µ–Ω–æ)")
    
    response_text = "\n".join(response_lines)
    
    # Telegram –∏–º–µ–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è
    if len(response_text) > 4000:
        response_text = response_text[:4000] + "\n\n... (–ø–æ–∫–∞–∑–∞–Ω—ã –Ω–µ –≤—Å–µ —Ä–µ–∞–∫—Ü–∏–∏)"
    
    await update.message.reply_text(response_text)
    
    logger.info(f"User {user_id} requested likes history ({len(recent_reactions)} reactions)")

async def status_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if update.message.chat.type != 'private':
        await update.message.reply_text(
            "‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º."
        )
        return
    
    user_id = update.effective_user.id
    username = update.effective_user.username or update.effective_user.first_name
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    is_muted = is_user_muted(user_id)
    mute_status = "üîá –û—Ç–∫–ª—é—á–µ–Ω—ã" if is_muted else "üîî –í–∫–ª—é—á–µ–Ω—ã"
    
    # –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∞–∫—Ü–∏–π
    reactions = get_user_reactions(user_id)
    total_reactions = len(reactions)
    likes_count = len([r for r in reactions if r["type"] == "like"])
    comments_count = len([r for r in reactions if r["type"] == "comment"])
    
    status_text = f"""
üë§ –í–∞—à —Å—Ç–∞—Ç—É—Å –≤ TimoReel

üÜî ID: {user_id}
üë§ –ò–º—è: @{username}

üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
‚Ä¢ –í—Å–µ–≥–æ —Ä–µ–∞–∫—Ü–∏–π: {total_reactions}
‚Ä¢ –õ–∞–π–∫–æ–≤: {likes_count} ‚ù§Ô∏è
‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {comments_count} üí¨

üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {mute_status}

‚öôÔ∏è –ö–æ–º–∞–Ω–¥—ã:
/mute - –æ—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
/unmute - –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è  
/likes - –ø–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ä–µ–∞–∫—Ü–∏–π
/status - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ—Ç —Å—Ç–∞—Ç—É—Å
"""
    
    await update.message.reply_text(status_text)
    
    logger.info(f"User {user_id} requested status") 