#!/usr/bin/env python3
"""
–î–µ–º–æ-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ
"""

import logging
import os
import shutil
from telegram import Update
from telegram.ext import ContextTypes
from telegram.constants import ChatAction
from utils.cache import add_video_metadata

logger = logging.getLogger(__name__)

# –ü—É—Ç—å –∫ –¥–µ–º–æ-–≤–∏–¥–µ–æ
DEMO_VIDEO_PATH = os.path.join(os.path.dirname(__file__), '..', 'demo_video.mp4')

def create_demo_video():
    """–°–æ–∑–¥–∞–µ—Ç –¥–µ–º–æ-–≤–∏–¥–µ–æ —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç"""
    if not os.path.exists(DEMO_VIDEO_PATH):
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –¥–µ–º–æ-—Ñ–∞–π–ª (–∑–∞–≥–ª—É—à–∫—É)
        demo_content = b"DEMO VIDEO FILE - This is a placeholder for testing TimoReel functionality"
        with open(DEMO_VIDEO_PATH, 'wb') as f:
            f.write(demo_content)
        logger.info(f"Created demo video file: {DEMO_VIDEO_PATH}")

async def handle_demo_download(update: Update, context: ContextTypes.DEFAULT_TYPE, url: str):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–º–æ-–∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ"""
    message = update.message
    chat_id = message.chat_id
    user_id = message.from_user.id
    username = message.from_user.username or message.from_user.first_name
    
    try:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç
        await context.bot.send_chat_action(chat_id=chat_id, action=ChatAction.UPLOAD_VIDEO)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
        if 'instagram.com' in url:
            platform = "Instagram"
            demo_title = "Demo Instagram Reel"
            demo_author = "demo_user"
        elif 'tiktok.com' in url or 'vm.tiktok.com' in url:
            platform = "TikTok"
            demo_title = "Demo TikTok Video"
            demo_author = "demo_creator"
        else:
            platform = "Unknown"
            demo_title = "Demo Video"
            demo_author = "demo_user"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        status_message = await message.reply_text(
            f"üé¨ –î–ï–ú–û-–†–ï–ñ–ò–ú\n\n"
            f"‚¨áÔ∏è –ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ —Å {platform}...\n"
            f"üìπ {demo_title}\n"
            f"üë§ {demo_author}\n\n"
            f"‚ÑπÔ∏è –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
        )
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        import asyncio
        await asyncio.sleep(2)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
        await status_message.edit_text(
            f"üé¨ –î–ï–ú–û-–†–ï–ñ–ò–ú\n\n"
            f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –¥–µ–º–æ-–≤–∏–¥–µ–æ...\n"
            f"üìπ {demo_title}\n"
            f"üë§ {demo_author}"
        )
        
        # –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–≤–∏–¥–µ–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        create_demo_video()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ–º–æ-–≤–∏–¥–µ–æ
        with open(DEMO_VIDEO_PATH, 'rb') as video_file:
            sent_message = await context.bot.send_video(
                chat_id=chat_id,
                video=video_file,
                caption=(
                    f"üé¨ {demo_title} (–î–ï–ú–û)\n"
                    f"üë§ @{username}\n"
                    f"üîó –ò—Å—Ç–æ—á–Ω–∏–∫: {platform}\n\n"
                    f"‚ÑπÔ∏è –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ TimoReel.\n"
                    f"–í —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ –∑–¥–µ—Å—å –±—ã–ª–æ –±—ã –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤–∏–¥–µ–æ."
                ),
                reply_to_message_id=message.message_id,
                supports_streaming=True
            )
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await status_message.delete()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        if sent_message.video:
            file_id = sent_message.video.file_id
            add_video_metadata(
                file_id=file_id,
                chat_id=chat_id,
                user_id=user_id,
                username=username
            )
            logger.info(f"Demo video saved with file_id: {file_id}")
        
        return True
        
    except Exception as e:
        logger.error(f"Error in demo download for {url}: {e}")
        await message.reply_text(
            f"‚ùå –û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ\n\n"
            f"üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞"
        )
        return False 